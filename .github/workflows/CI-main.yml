---
name: CI - main
run-name: "CI - main"


on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs: {}


jobs:
  test-unit:
    uses: ./.github/workflows/_test_unit.yml
    with:
      python-version: "3.11"


  pr:
    name: Get PR ID
    runs-on: ubuntu-22.04
    outputs:
      id: ${{ steps.pr.outputs.id }}
    steps:
      - name: Get PR ID
        id: pr
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          commit_message=$(
            curl -s -L \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer $GH_TOKEN" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              https://api.github.com/repos/${{ github.repository }}/commits/${{ github.sha }} | \
            jq -r ".commit.message"
          )
          ID=$(echo "$commit_message" | head -1 | grep -o "(#.*)" | grep -o "[0-9]*")
          echo "id=$ID" >> $GITHUB_OUTPUT
            

  version:
    needs:
      - pr
    uses: ./.github/workflows/_version.yml
    with:
      is-release: true
      pull-request-number: ${{ needs.pr.outputs.id }}


  build:
    needs:
      - version
      - test-unit
    permissions:
      packages: write
      contents: read
    uses: ./.github/workflows/_build.yml
    with: 
      python-version: "3.11"
      version: ${{ needs.version.outputs.version }}


  test-e2e:
    needs:
      - build
      - version
    uses: ./.github/workflows/_test_e2e.yml
    with:
      python-version: "3.11"
      version: ${{ needs.version.outputs.version }}


  release:
    needs:
      - version
      - test-e2e
    permissions:
      contents: write
      packages: write
    uses: ./.github/workflows/_release.yml
    with:
      is-release: true
      version: ${{ needs.version.outputs.version }}


  staging-deploy:
    name: deploy to staging
    runs-on: ubuntu-latest
    needs: [release]
    steps:
      - run: echo "Automatically deploy to staging"


  # For traditional implementation of strict separation of duties for compliance
  prod-deploy:
    name: deploy to production
    runs-on: ubuntu-latest
    needs: [staging-deploy]
    environment: production
    steps:
      - run: echo "Manual approval to deploy to production"
